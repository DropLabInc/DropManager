timeout: "1200s"
substitutions:
  _SERVICE: "dropmanager"
  _REGION: "us-central1"
steps:
  # Build Docker image from the backend directory
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA", "backend"]

  # Push image to Container Registry / Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA"]

  # Deploy to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run", "deploy", "${_SERVICE}",
        "--image", "gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA",
        "--region", "${_REGION}",
        "--platform", "managed",
        "--quiet"
      ]

images:
  - "gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA"
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/dropmanager:$BUILD_ID', '.']
  
  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/dropmanager:$BUILD_ID']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'dropmanager'
      - '--image'
      - 'gcr.io/$PROJECT_ID/dropmanager:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'

# Store the built image
images:
  - 'gcr.io/$PROJECT_ID/dropmanager:$BUILD_ID'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
